import { BeforeMount, Monaco } from '@monaco-editor/react';

export const initCustomEditor: BeforeMount = ({ editor, languages }) => {
	languagesCustomization(languages);
	editorCustomizations(editor);
};

const getThemeColors = () => {
	const monacoRoot = document.querySelector('[class*="codeEditor"]');
	let bgColor, fontColor;
	if (monacoRoot) {
		bgColor = getComputedStyle(monacoRoot).getPropertyValue('--fna-colorBgElevated');
		fontColor = getComputedStyle(monacoRoot).getPropertyValue('--fna-colorText');
	}

	return { background: bgColor || '#ffffff', foreground: fontColor || '#000000' };
};

const editorCustomizations = (editor: Monaco['editor']) => {
	const { background, foreground } = getThemeColors();
	editor.defineTheme('spielTheme', {
		base: 'vs',
		inherit: false,
		colors: {
			'editor.selectionBackground': '#FFFF00',
			'editor.background': background,
			'editor.foreground': foreground,
		},
		rules: [
			{ token: 'navigate', foreground: 'eac81e' },
			{ token: 'focus', foreground: 'dddd00' },
			{ token: 'bracketed', foreground: '00aa00' },
			{ token: 'terminal', foreground: '009933' },
			{ token: 'terminal_connect', foreground: '00ff00' },
			{ token: 'spiel', foreground: '550077' },
			{ token: 'grab', foreground: '00ff00' },
			{ token: 'p', foreground: '7E7E7E' },
			{ token: 'speak', foreground: '7E7E7E' },
			{ token: 'mark', foreground: '009900' },
			{ token: 'fullscreen', foreground: 'c57703' },
			{ token: 'zoom_in', foreground: '07cd07' },
			{ token: 'zoom_out', foreground: '07cd07' },
			{ token: 'url', foreground: '000088' },
			{ token: 'portal', foreground: '000088' },
			{ token: 'timeout', foreground: '660000' },
			{ token: 'wait_for', foreground: '443300' },
			{ token: 'exit', foreground: 'ff0000' },
			{ token: 'exit_for', foreground: 'ff0000' },
			{ token: 'login_for', foreground: '006600' },
			{ token: 'script', foreground: '660000' },
			{ token: 'monaco', foreground: '7E7E7E' },
			{ token: 'monaco_line', foreground: '7E7E7E' },
			{ token: 'monaco_clear', foreground: '7E7E7E' },
			{ token: 'monaco_click', foreground: '7E7E7E' },
			{ token: 'type', foreground: '006600' },
			{ token: 'send_key', foreground: '006600' },
			{ token: 'send_meta_key', foreground: '006600' },
			{ token: 'play', foreground: '006666' },
			{ token: 'break', foreground: '880000' },
			{ token: 'scroll_into_view', foreground: '006600' },
			{ token: 'scroll_to', foreground: '006600' },
			{ token: 'scroll_by', foreground: '006600' },
			{ token: 'click', foreground: '006600' },
			{ token: 'native_click', foreground: '006600' },
			{ token: 'soft_return', foreground: '006600' },
			{ token: 'blur', foreground: '006666' },
			{ token: 'highlight', foreground: '996600' },
			{ token: 'highlight_off', foreground: '996600' },
			{ token: 'flash', foreground: '996600' },
			{ token: 'notify', foreground: '002388' },
			{ token: 'organizer', foreground: '006600' },
			{ token: 'topic', foreground: '006600' },
			{ token: 'organizer_show', foreground: '006600' },
			{ token: 'organizer_hide', foreground: '006600' },
			{ token: 'organizer_next', foreground: '006600' },
			{ token: 'mouse_to', foreground: '006600' },
			{ token: 'mouse_move', foreground: '006600' },
			{ token: 'move_by', foreground: '006600' },
			{ token: 'mouse_arc', foreground: '006600' },
			{ token: 'mouse_settings', foreground: '006699' },
			{ token: 'circle', foreground: '006600' },
			{ token: 'swirl', foreground: '006600' },
			{ token: 'quick_swirl', foreground: '006600' },
			{ token: 'long_swirl_in', foreground: '006600' },
			{ token: 'long_swirl_out', foreground: '006600' },
			{ token: 'spaz', foreground: '006600' },
			{ token: 'start_recording', foreground: '92C843' },
			{ token: 'stop_recording', foreground: '92C843' },
			{ token: 'encode', foreground: '7E7E7E' },
			{ token: 'fade_in', foreground: '000000' },
			{ token: 'fade_out', foreground: '000000' },
			{ token: 'blur_in', foreground: '000000' },
			{ token: 'blur_out', foreground: '000000' },
			{ token: 'console', foreground: '000000' },
			{ token: 'any-xml', foreground: 'cfcfcf' },
			{ token: 'attribute', foreground: 'ff0000' },
		],
	});
};

const languagesCustomization = (languages: Monaco['languages']) => {
	languages.register({
		id: 'spiel',
		firstLine: '<spiel',
	});

	const range = {
		startLineNumber: 0,
		endColumn: 0,
		startColumn: 0,
		endLineNumber: 0,
	};

	languages.registerCompletionItemProvider('spiel', {
		provideCompletionItems: () => ({
			suggestions: [
				{
					range,
					label: 'simpleText',
					kind: languages.CompletionItemKind.Text,
					insertText: 'simpleText',
				},
				{
					range,
					label: 'testing',
					kind: languages.CompletionItemKind.Keyword,
					insertText: 'testing(${1:condition})',
					insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,
				},
				{
					range,
					label: 'ifelse',
					kind: languages.CompletionItemKind.Snippet,
					insertText: ['if (${1:condition}) {', '\t$0', '} else {', '\t', '}'].join('\n'),
					insertTextRules: languages.CompletionItemInsertTextRule.InsertAsSnippet,
					documentation: 'If-Else Statement',
				},
			],
		}),
	});

	languages.setMonarchTokensProvider('spiel', {
		tokenizer: {
			root: [
				[/\[([^\]]*)[\]]{1,}/, 'bracketed'],
				[/\[([^\]]*)(\[\d\]){1}\]/, 'bracketed'],
				[/\[[^\]]*\]/, 'bracketed'],
				[/ [a-z]+="[^"]+"/, 'attribute'],
				[/<spiel([^>]?|[^>]+)>/, 'spiel'],
				[/<grab([^>]?|[^>]+)>/, 'grab'],
				[/<focus([^>]?|[^>]+)>/, 'focus'],
				[/<\/spiel>/, 'spiel'],
				[/<speak([^>]?|[^>]+)>/, 'speak'],
				[/<\/speak>/, 'speak'],
				[/<p([^>]?|[^>]+)>/, 'speak'],
				[/<\/p>/, 'speak'],
				[/<terminal_connect([^>]?|[^>]+)>/, 'terminal_connect'],
				[/<terminal([^>]?|[^>]+)>/, 'terminal'],
				[/<\/terminal>/, 'terminal'],
				[/<fullscreen([^>]?|[^>]+)>/, 'fullscreen'],
				[/<\/fullscreen>/, 'fullscreen'],
				[/<zoom_out([^>]?|[^>]+)>/, 'zoom_out'],
				[/<\/zoom_out>/, 'zoom_out'],
				[/<zoom_in([^>]?|[^>]+)>/, 'zoom_in'],
				[/<\/zoom_in>/, 'zoom_in'],
				[/<mark([^>]?|[^>]+)>/, 'mark'],
				[/<\/mark>/, 'mark'],
				[/<navigate([^>]?|[^>]+)>/, 'navigate'],
				[/<\/navigate>/, 'navigate'],
				[/<url([^>]?|[^>]+)>/, 'url'],
				[/<\/url>/, 'url'],
				[/<portal([^>]?|[^>]+)>/, 'portal'],
				[/<\/portal>/, 'portal'],
				[/<timeout([^>]?|[^>]+)>/, 'timeout'],
				[/<\/timeout>/, 'timeout'],
				[/<wait_for([^>]?|[^>]+)>/, 'wait_for'],
				[/<\/wait_for>/, 'wait_for'],
				[/<exit([^>]?|[^>]+)>/, 'exit'],
				[/<\/exit>/, 'exit'],
				[/<exit_for([^>]?|[^>]+)>/, 'exit_for'],
				[/<\/exit_for>/, 'exit_for'],
				[/<login_for([^>]?|[^>]+)>/, 'login_for'],
				[/<\/login_for>/, 'login_for'],
				[/<script([^>]?|[^>]+)>/, 'script'],
				[/<\/script>/, 'script'],
				[/<mouse_to([^>]?|[^>]+)>/, 'mouse_to'],
				[/<\/mouse_to>/, 'mouse_to'],
				[/<mouse_move([^>]?|[^>]+)>/, 'mouse_move'],
				[/<\/mouse_move>/, 'mouse_move'],
				[/<move_by([^>]?|[^>]+)>/, 'move_by'],
				[/<\/move_by>/, 'move_by'],
				[/<mouse_arc([^>]?|[^>]+)>/, 'mouse_arc'],
				[/<\/mouse_arc>/, 'mouse_arc'],
				[/<mouse_settings([^>]?|[^>]+)>/, 'mouse_settings'],
				[/<\/mouse_settings>/, 'mouse_settings'],
				[/<monaco([^>]?|[^>]+)>/, 'monaco'],
				[/<\/monaco>/, 'monaco'],
				[/<monaco_line([^>]?|[^>]+)>/, 'monaco_line'],
				[/<\/monaco_line>/, 'monaco_line'],
				[/<monaco_clear([^>]?|[^>]+)>/, 'monaco_clear'],
				[/<\/monaco_clear>/, 'monaco_clear'],
				[/<monaco_click([^>]?|[^>]+)>/, 'monaco_click'],
				[/<\/monaco_click>/, 'monaco_click'],
				[/<type([^>]?|[^>]+)>/, 'type'],
				[/<\/type>/, 'type'],
				[/<send_key([^>]?|[^>]+)>/, 'send_key'],
				[/<\/send_key>/, 'send_key'],
				[/<send_meta_key([^>]?|[^>]+)>/, 'send_meta_key'],
				[/<\/send_meta_key>/, 'send_meta_key'],
				[/<play([^>]?|[^>]+)>/, 'play'],
				[/<\/play>/, 'play'],
				[/<break([^>]?|[^>]+)>/, 'break'],
				[/<\/break>/, 'break'],
				[/<scroll_into_view([^>]?|[^>]+)>/, 'scroll_into_view'],
				[/<\/scroll_into_view>/, 'scroll_into_view'],
				[/<scroll_to([^>]?|[^>]+)>/, 'scroll_to'],
				[/<\/scroll_to>/, 'scroll_to'],
				[/<scroll_by([^>]?|[^>]+)>/, 'scroll_by'],
				[/<\/scroll_by>/, 'scroll_by'],
				[/<click([^>]?|[^>]+)>/, 'click'],
				[/<\/click>/, 'click'],
				[/<native_click\/>/, 'native_click'],
				[/<soft_return([^>]?|[^>]+)>/, 'soft_return'],
				[/<\/soft_return>/, 'soft_return'],
				[/<blur([^>]?|[^>]+)>/, 'blur'],
				[/<\/blur>/, 'blur'],
				[/<highlight([^>]?|[^>]+)>/, 'highlight'],
				[/<\/highlight>/, 'highlight'],
				[/<highlight_off([^>]?|[^>]+)>/, 'highlight_off'],
				[/<\/highlight_off>/, 'highlight_off'],
				[/<flash([^>]?|[^>]+)>/, 'flash'],
				[/<\/flash>/, 'flash'],
				[/<notify([^>]?|[^>]+)>/, 'notify'],
				[/<\/notify>/, 'notify'],
				[/<organizer([^>]?|[^>]+)>/, 'organizer'],
				[/<\/organizer>/, 'organizer'],
				[/<topic([^>]?|[^>]+)>/, 'topic'],
				[/<\/topic>/, 'topic'],
				[/<organizer_show([^>]?|[^>]+)>/, 'organizer_show'],
				[/<\/organizer_show>/, 'organizer_show'],
				[/<organizer_hide([^>]?|[^>]+)>/, 'organizer_hide'],
				[/<\/organizer_hide>/, 'organizer_hide'],
				[/<organizer_next([^>]?|[^>]+)>/, 'organizer_next'],
				[/<\/organizer_next>/, 'organizer_next'],
				[/<circle([^>]?|[^>]+)>/, 'circle'],
				[/<\/circle>/, 'circle'],
				[/<swirl([^>]?|[^>]+)>/, 'swirl'],
				[/<\/swirl>/, 'swirl'],
				[/<quick_swirl([^>]?|[^>]+)>/, 'quick_swirl'],
				[/<\/quick_swirl>/, 'quick_swirl'],
				[/<long_swirl_in([^>]?|[^>]+)>/, 'long_swirl_in'],
				[/<\/long_swirl_in>/, 'long_swirl_in'],
				[/<long_swirl_out([^>]?|[^>]+)>/, 'long_swirl_out'],
				[/<\/long_swirl_out>/, 'long_swirl_out'],
				[/<spaz([^>]?|[^>]+)>/, 'spaz'],
				[/<\/spaz>/, 'spaz'],
				[/<start_recording\/>/, 'start_recording'],
				[/<stop_recording\/>/, 'stop_recording'],
				[/<encode\/>/, 'encode'],
				[/<fade_in([^>]?|[^>]+)>/, 'fade_in'],
				[/<\/fade_in>/, 'fade_in'],
				[/<fade_out([^>]?|[^>]+)>/, 'fade_out'],
				[/<\/fade_out>/, 'fade_out'],
				[/<blur_in([^>]?|[^>]+)>/, 'blur_in'],
				[/<\/blur_in>/, 'blur_in'],
				[/<blur_out([^>]?|[^>]+)>/, 'blur_out'],
				[/<\/blur_out>/, 'blur_out'],
				[/<console([^>]?|[^>]+)>/, 'console'],
				[/<\/console>/, 'console'],
				[/<[^>]*>/, 'any-xml'],
			],
		},
	});
};
